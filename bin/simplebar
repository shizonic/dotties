#!/usr/bin/env bash
#
# A simple block-style bar using lemonbar
# and named pipes to reduce resource footprint
#
# Normally, this file is split into seperate files
# for colors and bar defaults, I have included them
# all together here for simplicity
#
# Bar created by Joshua Ervin @ University of Washington
# Contact: joshue@uw.edu

source "${HOME}/.cache/squash/colors"
. "$HOME/.cache/squash/colors"

FONTS="-o 0 -f Iosekva-10 -o -2 -f FontAwesome-10"
WIDTH=1910 # bar width
HEIGHT=20 # bar height
XOFF=0 # x offset
YOFF=0 # y offset
BRDR=6 # border width
BRDRC=${BG} # border color
#BRDRC=#00000000 #back background transparent
BBG=${BG} # bar background color
#BBG=#00000000 #back background transparent
BFG=${FG}

# Status constants
# Change these to modify bar behavior
DESKTOP_COUNT=5 
BATTERY_FULL=98
BATTERY_MID=50
BATTERY_LOW=20

# Sleep constnats
WORKSPACE_SLEEP=0.5
BATTERY_SLEEP=10
WIRELESS_SLEEP=10
VOLUME_SLEEP=1
DATE_SLEEP=5
MUSIC_SLEEP=5

# Formatting Strings
# I would reccomend not touching these :D
SEP=" "
SEP2="    "
SEPB="__"
SPC="%{B$BG}%{F$BG}$SEPB%{B-}%{F-}"

# Glyphs used for both bars
GLYCUR=$(echo -e "\ue000")
GLYEM=$(echo -e "\ue001")
GLYDATE=$(echo -e "\uf017")
GLYVOLLOW=$(echo -e "\uf027")
GLYVOLHIGH=$(echo -e "\uf028")
GLYVOLMUTE=$(echo -e "\uf026")
GLYBATLOW=$(echo -e "\uf243")
GLYBAT=$(echo -e "\uf240")
GLYBATMAX=$(echo -e "\uf0e7")
GLYWLANHIGH=$(echo -e "\uf012")
GLYWLANLOW=$(echo -e "\uf2d1")
GLYMUSIC=$(echo -e "\ue0fe")

PANIC="%{F$MAG}%{B$BG}${SEP}"
ALERT="%{F$RED}%{B$BG}${SEP}"
WARN="%{F$YLW}%{B$BG}${SEP}"
GOOD="%{F$GRN}%{B$BG}${SEP}"
PLAIN="%{F$WHT}%{B$BG}${SEP}"
GEN="%{F$FG}%{B$BG}${SEP}"
EMPTY="%{F$FG}%{B$BG}${SEP}"
BLACK="%{F$FG}%{B$BG}${SEP}"
FULL="%{F$BLK}%{B$BG}${SEP}"
CLR="${SEP}%{B-}${F-}"

NOR="%{F$FG}%{B$BG}"
HIRED="%{F$RED}%{B$BG}"
HIYLW="%{F$YLW}%{B$BG}"
HIGRN="%{F$GRN}%{B$BG}"

PANEL_FIFO=/tmp/panel-fifo
OPTIONS="-d ${FONTS} -g ${WIDTH}x${HEIGHT}+${XOFF}+${YOFF} -B ${BBG} -F ${BFG} -r 5 -R ${BRDRC} -u 2" 

[ -e "${PANEL_FIFO}" ] && rm "${PANEL_FIFO}"
mkfifo "${PANEL_FIFO}"

workspaces() {
    while true; do
        local cur=$(xprop -root _NET_CURRENT_DESKTOP | awk '{print $3}')
        local total=${DESKTOP_COUNT}
        local seq=""

        for ((i=0;i<cur;i++)); do 
            seq+="${EMPTY}${i}${CLR}"
        done

        seq+="${WARN}${cur}${SEP}"

        min=$cur+1
        for ((i=min;i<total;i++)); do
            seq+="${EMPTY}${i}${CLR}"
        done

        echo "WORKSPACES ${seq}${CLR}"
        echo "WORKSPACES ${seq}"

        sleep ${WORKSPACE_SLEEP}
    done
}

workspaces > "${PANEL_FIFO}" &

clock() 
{
    while true; do
        local clock="$(date +'%a %d %I:%M')"
        echo "CLOCK ${GEN}${GLYDATE}${BLACK}${clock}${CLR}"

        sleep ${DATE_SLEEP}
    done
}

clock > "${PANEL_FIFO}" &

volume()
{
    while true; do
        local vol="$(amixer sget Master | grep 'Mono: Playback' | awk -F'[][]' '{ print $2 }' | cut -d '%' -f1)"
        local mut="$(amixer get Master| awk 'NR==5 {print $6}')"
        vol=$(( vol/10 ))

        local line=""
        for ((i=0;i<vol;i+=2)); do
            line+="-"
        done

        if [[ ${mut} = "[off]" ]]; then
            line+=${HIRED}"|"${NOR}
            label=${HIRED}${GLYVOLMUTE}${CLR}
        elif [[ "$vol" -lt 5 ]]; then
            line+=${HIYLW}"|"${NOR}
            label=${HIYLW}${GLYVOLLOW}${CLR}
        else
            line+=${HIGRN}"|"${NOR}
            label=${HIGRN}${GLYVOLHIGH}${CLR}
        fi

        for ((i=$((vol+1));i<10;i+=2)); do
            line+="-"
        done

        echo "VOLUME ${label}${BLACK}${line}${CLR}"

        sleep ${VOLUME_SLEEP} 
    done
}

volume > "${PANEL_FIFO}" &

battery() 
{
    while true; do
        local cap="$(cat /sys/class/power_supply/BAT0/capacity)"
        local stat="$(cat /sys/class/power_supply/BAT0/status)"

        if [[ ${cap} -ge ${BATTERY_FULL} || ${stat} = "Charging" ]]; then
            echo "BATTERY ${GOOD}${GLYBATMAX}${BLACK}${cap}${CLR}"
        elif [[ ${cap} -ge ${BATTERY_MID} ]]; then
            echo "BATTERY ${WARN}${GLYBAT}${BLACK}${cap}${CLR}"
        else 
            echo "BATTERY ${ALERT}${GLYBATLOW}${BLACK}${cap}${CLR}"
        fi

        sleep ${BATTERY_SLEEP}
    done
}

battery > "${PANEL_FIFO}" &

wireless() 
{
    while true; do
        local wifi=$(iwgetid -r)

        if [[ -z $wifi ]]; then
            local wifi="DISCONNECTED"
            echo "WIRELESS ${ALERT}${GLYWLANLOW}${BLACK}${wifi}${CLR}"
        else
            echo "WIRELESS ${GOOD}${GLYWLANHIGH}${BLACK}${wifi}${CLR}"
        fi

        sleep ${WIRELESS_SLEEP}
    done
}

wireless > "${PANEL_FIFO}" &

sptfy()
{
    while true; do
        title=$(music)

        if [[ -z $(music) ]]; then
            echo "MUSIC ${GEN}${GLYMUSIC}${SEP}${BLACK}..${CLR}"
        else
            echo "MUSIC ${GEN}${GLYMUSIC}${SEP}${BLACK}${title}${CLR}"
        fi

        sleep ${MUSIC_SLEEP}
    done
}

while read -r line; do
    case $line in
        CLOCK*)
            fn_time="${line#CLOCK }"
            ;;
        VOLUME*)
            fn_vol="${line#VOLUME }"
            ;;
        BATTERY*)
            fn_bat="${line#BATTERY }"
            ;;
        WORKSPACES*)
            fn_work="${line#WORKSPACES }"
            ;;
        WIRELESS*)
            fn_wire="${line#WIRELESS }"
            ;;
        MUSIC*)
            fn_music="${line#MUSIC }"
            ;;
    esac
    printf "%s\n" "%{l}${fn_work}${SEP}${fn_music}%{r}${fn_bat}${SEP}${fn_wire}${SEP}${fn_vol}${SEP}${fn_time}${fn_back}"
done < "${PANEL_FIFO}" | lemonbar ${OPTIONS} | sh > /dev/null
